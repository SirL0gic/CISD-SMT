//@version=5
indicator("Bullish & Bearish CISD + SMT Divergence", overlay=true, max_lines_count=500, max_labels_count=500)

// =====================================================================
//  CISD (unchanged logic)
// =====================================================================
prevRange      = high[1] - low[1]
prevBodySize   = math.abs(close[1] - open[1])
prevUpperWick  = high[1] - math.max(open[1], close[1])
prevLowerWick  = math.min(open[1], close[1]) - low[1]

isPrevRed   = close[1] < open[1]
isPrevGreen = close[1] > open[1]

// Bullish CISD
isBullishWick = (prevLowerWick > prevUpperWick) and (prevLowerWick >= 0.3 * prevRange)
// Bearish CISD
isBearishWick = (prevUpperWick > prevLowerWick) and (prevUpperWick >= 0.3 * prevRange)

// Confirmations
isConfirmGreen             = close > open
isConfirmCloseAboveHigh    = close > high[1]
isConfirmLowAbovePrevLow   = low >= low[1]
isConfirmRed               = close < open
isConfirmCloseBelowLow     = close < low[1]
isConfirmHighBelowPrevHigh = high <= high[1]

// Swings
isSwingLow  = (low[2] > low[1]) and (low >= low[1])
isSwingHigh = (high[2] < high[1]) and (high <= high[1])

// Final CISD setups
isBullishCISD = isPrevRed and isBullishWick and isConfirmGreen and isConfirmCloseAboveHigh and isConfirmLowAbovePrevLow and isSwingLow
isBearishCISD = isPrevGreen and isBearishWick and isConfirmRed and isConfirmCloseBelowLow and isConfirmHighBelowPrevHigh and isSwingHigh

// CISD Labels
if isBullishCISD
    label.new(bar_index[1], low[1], "Bullish\nCISD", style=label.style_label_up, color=color.new(color.green, 15), textcolor=color.white, size=size.small)
if isBearishCISD
    label.new(bar_index[1], high[1], "Bearish\nCISD", style=label.style_label_down, color=color.new(color.red, 15), textcolor=color.white, size=size.small)

// CISD Lines
var bullLines  = array.new_line()
var bearLines  = array.new_line()
var bullBars   = array.new_int()
var bearBars   = array.new_int()
var bullActive = array.new_int()
var bearActive = array.new_int()

if isBullishCISD
    ln = line.new(bar_index[1], high[1], bar_index, high[1], extend=extend.right, color=color.green, width=2)
    array.push(bullLines, ln)
    array.push(bullBars, bar_index[1])
    array.push(bullActive, 1)

if isBearishCISD
    ln = line.new(bar_index[1], low[1], bar_index, low[1], extend=extend.right, color=color.red, width=2)
    array.push(bearLines, ln)
    array.push(bearBars, bar_index[1])
    array.push(bearActive, 1)

if array.size(bullLines) > 0
    for i = 0 to array.size(bullLines) - 1
        if array.get(bullActive, i) == 1
            ln = array.get(bullLines, i)
            sb = array.get(bullBars, i)
            if bar_index > sb + 1 and high >= line.get_y1(ln)
                line.set_extend(ln, extend.none)
                line.set_x2(ln, bar_index)
                array.set(bullActive, i, 0)

if array.size(bearLines) > 0
    for i = 0 to array.size(bearLines) - 1
        if array.get(bearActive, i) == 1
            ln = array.get(bearLines, i)
            sb = array.get(bearBars, i)
            if bar_index > sb + 1 and low <= line.get_y1(ln)
                line.set_extend(ln, extend.none)
                line.set_x2(ln, bar_index)
                array.set(bearActive, i, 0)

// CISD Alert
alertcondition((isBullishCISD or isBearishCISD), title="CISD Formation", message="New CISD detected")

// =====================================================================
//  SMT DIVERGENCE MODULE (Advanced Swing-Based, Asynchronous Detection)
// =====================================================================
smtSymbol = input.symbol("NASDAQ:NDX", "SMT Comparison Symbol")
left = input.int(3, "Swing Left Bars", minval=1)
right = input.int(3, "Swing Right Bars", minval=1)

// Comparison symbol data
h_smt = request.security(smtSymbol, timeframe.period, high)
l_smt = request.security(smtSymbol, timeframe.period, low)

// Detect swings
chartSwingHigh = ta.pivothigh(high, left, right)
chartSwingLow  = ta.pivotlow(low, left, right)
smtSwingHigh   = ta.pivothigh(h_smt, left, right)
smtSwingLow    = ta.pivotlow(l_smt, left, right)

// Arrays to store swing data (persistent)
var chartHighs = array.new_float()
var chartHighBars = array.new_int()
var chartLows = array.new_float()
var chartLowBars = array.new_int()
var smtHighs = array.new_float()
var smtLows = array.new_float()

// Add new swing highs/lows
if not na(chartSwingHigh)
    array.push(chartHighs, chartSwingHigh)
    array.push(chartHighBars, bar_index[right])
if not na(chartSwingLow)
    array.push(chartLows, chartSwingLow)
    array.push(chartLowBars, bar_index[right])
if not na(smtSwingHigh)
    array.push(smtHighs, smtSwingHigh)
if not na(smtSwingLow)
    array.push(smtLows, smtSwingLow)

// Limit array size
maxKeep = 30
while array.size(chartHighs) > maxKeep
    array.shift(chartHighs)
    array.shift(chartHighBars)
while array.size(chartLows) > maxKeep
    array.shift(chartLows)
    array.shift(chartLowBars)
while array.size(smtHighs) > maxKeep
    array.shift(smtHighs)
while array.size(smtLows) > maxKeep
    array.shift(smtLows)

// Detect SMT divergences (asynchronous)
if not na(chartSwingHigh) and array.size(chartHighs) > 1 and array.size(smtHighs) > 0
    // Find the most recent valid previous swing
    float refChartHigh = na
    float refSMTHigh = na
    int refBarHigh = na
    for i = array.size(chartHighs) - 2 to 0
        refChartHigh := array.get(chartHighs, i)
        refBarHigh   := array.get(chartHighBars, i)
        if array.size(smtHighs) > i
            refSMTHigh := array.get(smtHighs, i)
        else
            refSMTHigh := array.get(smtHighs, array.size(smtHighs) - 1)
        break

    // Bearish SMT: chart makes HH, SMT fails HH
    if not na(refChartHigh) and not na(refSMTHigh)
        if chartSwingHigh > refChartHigh and not (h_smt > refSMTHigh)
            line.new(refBarHigh, refChartHigh, bar_index[right], chartSwingHigh, color=color.new(color.red, 0), width=2, style=line.style_dashed)
            label.new(bar_index[right], chartSwingHigh, "ðŸ”´ SMT Bearish", style=label.style_label_down, color=color.new(color.red, 80), textcolor=color.white, size=size.tiny)

if not na(chartSwingLow) and array.size(chartLows) > 1 and array.size(smtLows) > 0
    float refChartLow = na
    float refSMTLow = na
    int refBarLow = na
    for i = array.size(chartLows) - 2 to 0
        refChartLow := array.get(chartLows, i)
        refBarLow   := array.get(chartLowBars, i)
        if array.size(smtLows) > i
            refSMTLow := array.get(smtLows, i)
        else
            refSMTLow := array.get(smtLows, array.size(smtLows) - 1)
        break

    // Bullish SMT: chart makes LL, SMT fails LL
    if not na(refChartLow) and not na(refSMTLow)
        if chartSwingLow < refChartLow and not (l_smt < refSMTLow)
            line.new(refBarLow, refChartLow, bar_index[right], chartSwingLow, color=color.new(color.green, 0), width=2, style=line.style_dashed)
            label.new(bar_index[right], chartSwingLow, "ðŸŸ¢ SMT Bullish", style=label.style_label_up, color=color.new(color.green, 80), textcolor=color.white, size=size.tiny)
