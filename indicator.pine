//@version=5
indicator("Bullish & Bearish CISD", overlay=true, max_lines_count=500, max_labels_count=500)

// =====================================================================
// NEW CISD LOGIC (Wick-Based Detection)
// =====================================================================
prevRange      = high[1] - low[1]
prevBodySize   = math.abs(close[1] - open[1])
prevUpperWick  = high[1] - math.max(open[1], close[1])
prevLowerWick  = math.min(open[1], close[1]) - low[1]

isPrevRed   = close[1] < open[1]
isPrevGreen = close[1] > open[1]

// Bullish CISD conditions
isBullishWick = (prevLowerWick > prevUpperWick) and (prevLowerWick >= 0.3 * prevRange)

// Bearish CISD conditions
isBearishWick = (prevUpperWick > prevLowerWick) and (prevUpperWick >= 0.3 * prevRange)

// Confirmations
isConfirmGreen             = close > open
isConfirmCloseAboveHigh    = close > high[1]
isConfirmLowAbovePrevLow   = low >= low[1]
isConfirmRed               = close < open
isConfirmCloseBelowLow     = close < low[1]
isConfirmHighBelowPrevHigh = high <= high[1]

// Swings
isSwingLow  = (low[2] > low[1]) and (low >= low[1])
isSwingHigh = (high[2] < high[1]) and (high <= high[1])

// Final CISD setups
isBullishCISD = isPrevRed and isBullishWick and isConfirmGreen and isConfirmCloseAboveHigh and isConfirmLowAbovePrevLow and isSwingLow
isBearishCISD = isPrevGreen and isBearishWick and isConfirmRed and isConfirmCloseBelowLow and isConfirmHighBelowPrevHigh and isSwingHigh

// =====================================================================
// CISD Labels
// =====================================================================
if isBullishCISD
    label.new(bar_index[1], low[1], "Bullish\nCISD", style=label.style_label_up, color=color.new(color.green, 15), textcolor=color.white, size=size.small)

if isBearishCISD
    label.new(bar_index[1], high[1], "Bearish\nCISD", style=label.style_label_down, color=color.new(color.red, 15), textcolor=color.white, size=size.small)

// =====================================================================
// CISD Lines
// =====================================================================
var bullLines  = array.new_line()
var bearLines  = array.new_line()
var bullBars   = array.new_int()
var bearBars   = array.new_int()
var bullActive = array.new_int()
var bearActive = array.new_int()

if isBullishCISD
    ln = line.new(bar_index[1], high[1], bar_index, high[1], extend=extend.right, color=color.green, width=2)
    array.push(bullLines, ln)
    array.push(bullBars, bar_index[1])
    array.push(bullActive, 1)

if isBearishCISD
    ln = line.new(bar_index[1], low[1], bar_index, low[1], extend=extend.right, color=color.red, width=2)
    array.push(bearLines, ln)
    array.push(bearBars, bar_index[1])
    array.push(bearActive, 1)

if array.size(bullLines) > 0
    for i = 0 to array.size(bullLines) - 1
        if array.get(bullActive, i) == 1
            ln = array.get(bullLines, i)
            sb = array.get(bullBars, i)
            if bar_index > sb + 1 and high >= line.get_y1(ln)
                line.set_extend(ln, extend.none)
                line.set_x2(ln, bar_index)
                array.set(bullActive, i, 0)

if array.size(bearLines) > 0
    for i = 0 to array.size(bearLines) - 1
        if array.get(bearActive, i) == 1
            ln = array.get(bearLines, i)
            sb = array.get(bearBars, i)
            if bar_index > sb + 1 and low <= line.get_y1(ln)
                line.set_extend(ln, extend.none)
                line.set_x2(ln, bar_index)
                array.set(bearActive, i, 0)

// =====================================================================
// ALERTS
// =====================================================================
alertcondition((isBullishCISD or isBearishCISD), title="CISD Formation", message="New CISD detected ")

// =====================================================================
// SMT DIVERGENCE MODULE (Enhanced - Keeps Valid Swings Safely)
// =====================================================================
smtSymbol = input.symbol("NASDAQ:NDX", "SMT Comparison Symbol")

// Fetch secondary symbol data
smtHigh = request.security(smtSymbol, timeframe.period, high)
smtLow  = request.security(smtSymbol, timeframe.period, low)

// Swing detection parameters
left = input.int(3, "SMT Swing Left Bars", minval=1)
right = input.int(3, "SMT Swing Right Bars", minval=1)

// Detect swing points
chartSwingHigh = ta.pivothigh(high, left, right)
chartSwingLow  = ta.pivotlow(low, left, right)
smtSwingHigh   = ta.pivothigh(smtHigh, left, right)
smtSwingLow    = ta.pivotlow(smtLow, left, right)

// Arrays to store valid swings
var chartSwingHighs = array.new_float()
var chartSwingHighBars = array.new_int()
var chartSwingLows = array.new_float()
var chartSwingLowBars = array.new_int()
var smtSwingHighs = array.new_float()
var smtSwingLows = array.new_float()

// Append new chart swings
if not na(chartSwingHigh)
    array.push(chartSwingHighs, chartSwingHigh)
    array.push(chartSwingHighBars, bar_index[right])
if not na(chartSwingLow)
    array.push(chartSwingLows, chartSwingLow)
    array.push(chartSwingLowBars, bar_index[right])
if not na(smtSwingHigh)
    array.push(smtSwingHighs, smtSwingHigh)
if not na(smtSwingLow)
    array.push(smtSwingLows, smtSwingLow)

// Invalidate chart highs broken by a close above
if array.size(chartSwingHighs) > 0
    for i = array.size(chartSwingHighs) - 1 to 0
        if close > array.get(chartSwingHighs, i)
            array.remove(chartSwingHighs, i)
            array.remove(chartSwingHighBars, i)

// Invalidate chart lows broken by a close below
if array.size(chartSwingLows) > 0
    for i = array.size(chartSwingLows) - 1 to 0
        if close < array.get(chartSwingLows, i)
            array.remove(chartSwingLows, i)
            array.remove(chartSwingLowBars, i)

// Keep arrays manageable
if array.size(chartSwingHighs) > 20
    array.shift(chartSwingHighs)
    array.shift(chartSwingHighBars)
if array.size(chartSwingLows) > 20
    array.shift(chartSwingLows)
    array.shift(chartSwingLowBars)
if array.size(smtSwingHighs) > 20
    array.shift(smtSwingHighs)
if array.size(smtSwingLows) > 20
    array.shift(smtSwingLows)

// SMT Divergences
bearishSMT = false
bullishSMT = false
float refHigh = na
float refLow = na
int refHighBar = na
int refLowBar = na

// Check for Bearish SMT (chart makes HH, SMT doesnâ€™t)
if not na(chartSwingHigh) and array.size(chartSwingHighs) > 1 and array.size(smtSwingHighs) > 0
    for i = array.size(chartSwingHighs) - 2 to 0
        chHigh = array.get(chartSwingHighs, i)
        chBar  = array.get(chartSwingHighBars, i)
        smtH   = array.get(smtSwingHighs, array.size(smtSwingHighs) - 1)
        if chartSwingHigh > chHigh and not (smtHigh > smtH)
            bearishSMT := true
            refHigh := chHigh
            refHighBar := chBar
            break

// Check for Bullish SMT (chart makes LL, SMT doesnâ€™t)
if not na(chartSwingLow) and array.size(chartSwingLows) > 1 and array.size(smtSwingLows) > 0
    for i = array.size(chartSwingLows) - 2 to 0
        chLow = array.get(chartSwingLows, i)
        chBar = array.get(chartSwingLowBars, i)
        smtL  = array.get(smtSwingLows, array.size(smtSwingLows) - 1)
        if chartSwingLow < chLow and not (smtLow < smtL)
            bullishSMT := true
            refLow := chLow
            refLowBar := chBar
            break

// Draw lines and labels
if bearishSMT
    line.new(refHighBar, refHigh, bar_index[right], chartSwingHigh, color=color.new(color.red, 0), width=2, style=line.style_dashed)
    label.new(bar_index[right], chartSwingHigh, "ðŸ”´ SMT Bearish", style=label.style_label_down, color=color.new(color.red, 80), textcolor=color.white, size=size.small)

if bullishSMT
    line.new(refLowBar, refLow, bar_index[right], chartSwingLow, color=color.new(color.green, 0), width=2, style=line.style_dashed)
    label.new(bar_index[right], chartSwingLow, "ðŸŸ¢ SMT Bullish", style=label.style_label_up, color=color.new(color.green, 80), textcolor=color.white, size=size.small)
